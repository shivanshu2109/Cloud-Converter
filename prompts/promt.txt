# Same structure follow:    prompt = f"""
You are a cloud architect. Convert the following {source_cloud.upper()} service configuration into its {target_cloud.upper()} equivalent.

Return ONLY a single, raw JSON object. Do not add any notes, explanations, or markdown formatting.

The JSON object should maintain the SAME STRUCTURE as the input â€” with top-level keys like "type", "name", "location", "sku", and "properties", formatted as a resource block consistent with the input format.

Input:

{json.dumps(service_block, indent=2)}
"""


# detail structure:
    prompt = f"""
You are a cloud architect expert at creating deployable configurations. 
Your task is to convert the abstract {source_cloud.upper()} service definition below into a detailed, machine-deployable {target_cloud.upper()} JSON object.

- The output MUST be a single, raw JSON object.
- The JSON structure MUST represent the official deployable format for a {target_cloud.upper()} resource.
- DO NOT use the same keys as the input file (like 'service' or 'quantity'). Instead, use the correct, official keys for {target_cloud.upper()} (e.g., 'type', 'sku', 'properties').
- To link this translation back to the source, include a 'metadata' object inside the JSON that contains the original 'id' from the input file.
- Do not add any notes or explanations outside of the single JSON object.

Input to Convert:
{json.dumps(service_block, indent=2)}
"""
{
  "aws_region": "us-east-1",
  "model_id": "anthropic.claude-3-sonnet-20240229-v1:0",
  "cache_dir": "cache",
  "prompt_template": "You are a data architect creating a simplified, standardized model of cloud services. Your task is to convert the {source_cloud} service definition below into a simplified {target_cloud} JSON object that follows a fixed structure.\n\n**Instructions:**\n1. The output MUST be a single, raw JSON object. Do not include any explanations or markdown formatting.\n2. The JSON object MUST have these exact top-level keys: `id`, `service`, `resource_type`, `region`, `sku`, and `properties`.\n3. The `id` MUST be a simplified, generic name based on the resource type.\n4. If a key does not have a clear equivalent, its value MUST be a hyphen string: \"-\".\n\n**Example:**\n\nIf the input is:\n```json\n{{\n  \"id\": \"load-balancer\",\n  \"service\": \"elb\",\n  \"resource_type\": \"application_load_balancer\",\n  \"region\": \"us-east-1\",\n  \"configuration\": {{\n    \"traffic\": \"1000000 LCU-hours/month\"\n  }}\n}}\n```\n\nYour output MUST be:\n```json\n{{\n  \"id\": \"load-balancer\",\n  \"service\": \"Cloud Load Balancing\",\n  \"resource_type\": \"External Application Load Balancer\",\n  \"region\": \"us-east1\",\n  \"sku\": \"-\",\n  \"properties\": {{\n    \"forwarding_rules\": 1,\n    \"backend_services\": 1\n  }}\n}}\n```\n\n**Input to Convert:**\n\n{service_block_json}"
}